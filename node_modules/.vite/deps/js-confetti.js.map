{
  "version": 3,
  "sources": ["../../js-confetti/dist/es/index.js"],
  "sourcesContent": ["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction normalizeComputedStyleValue(string) {\n  // \"250px\" --> 250\n  return +string.replace(/px/, '');\n}\n\nfunction fixDPR(canvas) {\n  var dpr = window.devicePixelRatio;\n  var computedStyles = getComputedStyle(canvas);\n  var width = normalizeComputedStyleValue(computedStyles.getPropertyValue('width'));\n  var height = normalizeComputedStyleValue(computedStyles.getPropertyValue('height'));\n  canvas.setAttribute('width', (width * dpr).toString());\n  canvas.setAttribute('height', (height * dpr).toString());\n}\n\nfunction generateRandomNumber(min, max) {\n  var fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var randomNumber = Math.random() * (max - min) + min;\n  return Math.floor(randomNumber * Math.pow(10, fractionDigits)) / Math.pow(10, fractionDigits);\n}\n\nfunction generateRandomArrayElement(arr) {\n  return arr[generateRandomNumber(0, arr.length)];\n}\n\nvar FREE_FALLING_OBJECT_ACCELERATION = 0.00125;\nvar MIN_DRAG_FORCE_COEFFICIENT = 0.0005;\nvar MAX_DRAG_FORCE_COEFFICIENT = 0.0009;\nvar ROTATION_SLOWDOWN_ACCELERATION = 0.00001;\nvar INITIAL_SHAPE_RADIUS = 6;\nvar INITIAL_EMOJI_SIZE = 80;\nvar MIN_INITIAL_CONFETTI_SPEED = 0.9;\nvar MAX_INITIAL_CONFETTI_SPEED = 1.7;\nvar MIN_FINAL_X_CONFETTI_SPEED = 0.2;\nvar MAX_FINAL_X_CONFETTI_SPEED = 0.6;\nvar MIN_INITIAL_ROTATION_SPEED = 0.03;\nvar MAX_INITIAL_ROTATION_SPEED = 0.07;\nvar MIN_CONFETTI_ANGLE = 15;\nvar MAX_CONFETTI_ANGLE = 82;\nvar MAX_CONFETTI_POSITION_SHIFT = 150;\nvar SHAPE_VISIBILITY_TRESHOLD = 100;\nvar DEFAULT_CONFETTI_NUMBER = 250;\nvar DEFAULT_EMOJIS_NUMBER = 40;\nvar DEFAULT_CONFETTI_COLORS = ['#fcf403', '#62fc03', '#f4fc03', '#03e7fc', '#03fca5', '#a503fc', '#fc03ad', '#fc03c2'];\n\nfunction getWindowWidthCoefficient(canvasWidth) {\n  var HD_SCREEN_WIDTH = 1920;\n  return Math.log(canvasWidth) / Math.log(HD_SCREEN_WIDTH);\n}\n\nvar ConfettiShape = /*#__PURE__*/function () {\n  function ConfettiShape(args) {\n    _classCallCheck(this, ConfettiShape);\n\n    var initialPosition = args.initialPosition,\n        direction = args.direction,\n        confettiRadius = args.confettiRadius,\n        confettiColors = args.confettiColors,\n        emojis = args.emojis,\n        emojiSize = args.emojiSize,\n        canvasWidth = args.canvasWidth;\n    var randomConfettiSpeed = generateRandomNumber(MIN_INITIAL_CONFETTI_SPEED, MAX_INITIAL_CONFETTI_SPEED, 3);\n    var initialSpeed = randomConfettiSpeed * getWindowWidthCoefficient(canvasWidth);\n    this.confettiSpeed = {\n      x: initialSpeed,\n      y: initialSpeed\n    };\n    this.finalConfettiSpeedX = generateRandomNumber(MIN_FINAL_X_CONFETTI_SPEED, MAX_FINAL_X_CONFETTI_SPEED, 3);\n    this.rotationSpeed = emojis.length ? 0.01 : generateRandomNumber(MIN_INITIAL_ROTATION_SPEED, MAX_INITIAL_ROTATION_SPEED, 3) * getWindowWidthCoefficient(canvasWidth);\n    this.dragForceCoefficient = generateRandomNumber(MIN_DRAG_FORCE_COEFFICIENT, MAX_DRAG_FORCE_COEFFICIENT, 6);\n    this.radius = {\n      x: confettiRadius,\n      y: confettiRadius\n    };\n    this.initialRadius = confettiRadius;\n    this.rotationAngle = direction === 'left' ? generateRandomNumber(0, 0.2, 3) : generateRandomNumber(-0.2, 0, 3);\n    this.emojiSize = emojiSize;\n    this.emojiRotationAngle = generateRandomNumber(0, 2 * Math.PI);\n    this.radiusYUpdateDirection = 'down';\n    var angle = direction === 'left' ? generateRandomNumber(MAX_CONFETTI_ANGLE, MIN_CONFETTI_ANGLE) * Math.PI / 180 : generateRandomNumber(-MIN_CONFETTI_ANGLE, -MAX_CONFETTI_ANGLE) * Math.PI / 180;\n    this.absCos = Math.abs(Math.cos(angle));\n    this.absSin = Math.abs(Math.sin(angle));\n    var positionShift = generateRandomNumber(-MAX_CONFETTI_POSITION_SHIFT, 0);\n    var shiftedInitialPosition = {\n      x: initialPosition.x + (direction === 'left' ? -positionShift : positionShift) * this.absCos,\n      y: initialPosition.y - positionShift * this.absSin\n    };\n    this.currentPosition = Object.assign({}, shiftedInitialPosition);\n    this.initialPosition = Object.assign({}, shiftedInitialPosition);\n    this.color = emojis.length ? null : generateRandomArrayElement(confettiColors);\n    this.emoji = emojis.length ? generateRandomArrayElement(emojis) : null;\n    this.createdAt = new Date().getTime();\n    this.direction = direction;\n  }\n\n  _createClass(ConfettiShape, [{\n    key: \"draw\",\n    value: function draw(canvasContext) {\n      var currentPosition = this.currentPosition,\n          radius = this.radius,\n          color = this.color,\n          emoji = this.emoji,\n          rotationAngle = this.rotationAngle,\n          emojiRotationAngle = this.emojiRotationAngle,\n          emojiSize = this.emojiSize;\n      var dpr = window.devicePixelRatio;\n\n      if (color) {\n        canvasContext.fillStyle = color;\n        canvasContext.beginPath();\n        canvasContext.ellipse(currentPosition.x * dpr, currentPosition.y * dpr, radius.x * dpr, radius.y * dpr, rotationAngle, 0, 2 * Math.PI);\n        canvasContext.fill();\n      } else if (emoji) {\n        canvasContext.font = \"\".concat(emojiSize, \"px serif\");\n        canvasContext.save();\n        canvasContext.translate(dpr * currentPosition.x, dpr * currentPosition.y);\n        canvasContext.rotate(emojiRotationAngle);\n        canvasContext.textAlign = 'center';\n        canvasContext.fillText(emoji, 0, 0);\n        canvasContext.restore();\n      }\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(iterationTimeDelta, currentTime) {\n      var confettiSpeed = this.confettiSpeed,\n          dragForceCoefficient = this.dragForceCoefficient,\n          finalConfettiSpeedX = this.finalConfettiSpeedX,\n          radiusYUpdateDirection = this.radiusYUpdateDirection,\n          rotationSpeed = this.rotationSpeed,\n          createdAt = this.createdAt,\n          direction = this.direction;\n      var timeDeltaSinceCreation = currentTime - createdAt;\n      if (confettiSpeed.x > finalConfettiSpeedX) this.confettiSpeed.x -= dragForceCoefficient * iterationTimeDelta;\n      this.currentPosition.x += confettiSpeed.x * (direction === 'left' ? -this.absCos : this.absCos) * iterationTimeDelta;\n      this.currentPosition.y = this.initialPosition.y - confettiSpeed.y * this.absSin * timeDeltaSinceCreation + FREE_FALLING_OBJECT_ACCELERATION * Math.pow(timeDeltaSinceCreation, 2) / 2;\n      this.rotationSpeed -= this.emoji ? 0.0001 : ROTATION_SLOWDOWN_ACCELERATION * iterationTimeDelta;\n      if (this.rotationSpeed < 0) this.rotationSpeed = 0; // no need to update rotation radius for emoji\n\n      if (this.emoji) {\n        this.emojiRotationAngle += this.rotationSpeed * iterationTimeDelta % (2 * Math.PI);\n        return;\n      }\n\n      if (radiusYUpdateDirection === 'down') {\n        this.radius.y -= iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y <= 0) {\n          this.radius.y = 0;\n          this.radiusYUpdateDirection = 'up';\n        }\n      } else {\n        this.radius.y += iterationTimeDelta * rotationSpeed;\n\n        if (this.radius.y >= this.initialRadius) {\n          this.radius.y = this.initialRadius;\n          this.radiusYUpdateDirection = 'down';\n        }\n      }\n    }\n  }, {\n    key: \"getIsVisibleOnCanvas\",\n    value: function getIsVisibleOnCanvas(canvasHeight) {\n      return this.currentPosition.y < canvasHeight + SHAPE_VISIBILITY_TRESHOLD;\n    }\n  }]);\n\n  return ConfettiShape;\n}();\n\nfunction createCanvas() {\n  var canvas = document.createElement('canvas');\n  canvas.style.position = 'fixed';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.top = '0';\n  canvas.style.left = '0';\n  canvas.style.zIndex = '1000';\n  canvas.style.pointerEvents = 'none';\n  document.body.appendChild(canvas);\n  return canvas;\n}\n\nfunction normalizeConfettiConfig(confettiConfig) {\n  var _confettiConfig$confe = confettiConfig.confettiRadius,\n      confettiRadius = _confettiConfig$confe === void 0 ? INITIAL_SHAPE_RADIUS : _confettiConfig$confe,\n      _confettiConfig$confe2 = confettiConfig.confettiNumber,\n      confettiNumber = _confettiConfig$confe2 === void 0 ? confettiConfig.confettiesNumber || (confettiConfig.emojis ? DEFAULT_EMOJIS_NUMBER : DEFAULT_CONFETTI_NUMBER) : _confettiConfig$confe2,\n      _confettiConfig$confe3 = confettiConfig.confettiColors,\n      confettiColors = _confettiConfig$confe3 === void 0 ? DEFAULT_CONFETTI_COLORS : _confettiConfig$confe3,\n      _confettiConfig$emoji = confettiConfig.emojis,\n      emojis = _confettiConfig$emoji === void 0 ? confettiConfig.emojies || [] : _confettiConfig$emoji,\n      _confettiConfig$emoji2 = confettiConfig.emojiSize,\n      emojiSize = _confettiConfig$emoji2 === void 0 ? INITIAL_EMOJI_SIZE : _confettiConfig$emoji2; // deprecate wrong plural forms, used in early releases\n\n  if (confettiConfig.emojies) console.error(\"emojies argument is deprecated, please use emojis instead\");\n  if (confettiConfig.confettiesNumber) console.error(\"confettiesNumber argument is deprecated, please use confettiNumber instead\");\n  return {\n    confettiRadius: confettiRadius,\n    confettiNumber: confettiNumber,\n    confettiColors: confettiColors,\n    emojis: emojis,\n    emojiSize: emojiSize\n  };\n}\n\nvar ConfettiBatch = /*#__PURE__*/function () {\n  function ConfettiBatch(canvasContext) {\n    var _this = this;\n\n    _classCallCheck(this, ConfettiBatch);\n\n    this.canvasContext = canvasContext;\n    this.shapes = [];\n    this.promise = new Promise(function (completionCallback) {\n      return _this.resolvePromise = completionCallback;\n    });\n  }\n\n  _createClass(ConfettiBatch, [{\n    key: \"getBatchCompletePromise\",\n    value: function getBatchCompletePromise() {\n      return this.promise;\n    }\n  }, {\n    key: \"addShapes\",\n    value: function addShapes() {\n      var _this$shapes;\n\n      (_this$shapes = this.shapes).push.apply(_this$shapes, arguments);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _a;\n\n      if (this.shapes.length) {\n        return false;\n      }\n\n      (_a = this.resolvePromise) === null || _a === void 0 ? void 0 : _a.call(this);\n      return true;\n    }\n  }, {\n    key: \"processShapes\",\n    value: function processShapes(time, canvasHeight, cleanupInvisibleShapes) {\n      var _this2 = this;\n\n      var timeDelta = time.timeDelta,\n          currentTime = time.currentTime;\n      this.shapes = this.shapes.filter(function (shape) {\n        // Render the shapes in this batch\n        shape.updatePosition(timeDelta, currentTime);\n        shape.draw(_this2.canvasContext); // Only cleanup the shapes if we're being asked to\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return shape.getIsVisibleOnCanvas(canvasHeight);\n      });\n    }\n  }]);\n\n  return ConfettiBatch;\n}();\n\nvar JSConfetti = /*#__PURE__*/function () {\n  function JSConfetti() {\n    var jsConfettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, JSConfetti);\n\n    this.activeConfettiBatches = [];\n    this.canvas = jsConfettiConfig.canvas || createCanvas();\n    this.canvasContext = this.canvas.getContext('2d');\n    this.requestAnimationFrameRequested = false;\n    this.lastUpdated = new Date().getTime();\n    this.iterationIndex = 0;\n    this.loop = this.loop.bind(this);\n    requestAnimationFrame(this.loop);\n  }\n\n  _createClass(JSConfetti, [{\n    key: \"loop\",\n    value: function loop() {\n      this.requestAnimationFrameRequested = false;\n      fixDPR(this.canvas);\n      var currentTime = new Date().getTime();\n      var timeDelta = currentTime - this.lastUpdated;\n      var canvasHeight = this.canvas.offsetHeight;\n      var cleanupInvisibleShapes = this.iterationIndex % 10 === 0;\n      this.activeConfettiBatches = this.activeConfettiBatches.filter(function (batch) {\n        batch.processShapes({\n          timeDelta: timeDelta,\n          currentTime: currentTime\n        }, canvasHeight, cleanupInvisibleShapes); // Do not remove invisible shapes on every iteration\n\n        if (!cleanupInvisibleShapes) {\n          return true;\n        }\n\n        return !batch.complete();\n      });\n      this.iterationIndex++;\n      this.queueAnimationFrameIfNeeded(currentTime);\n    }\n  }, {\n    key: \"queueAnimationFrameIfNeeded\",\n    value: function queueAnimationFrameIfNeeded(currentTime) {\n      if (this.requestAnimationFrameRequested) {\n        // We already have a pended animation frame, so there is no more work\n        return;\n      }\n\n      if (this.activeConfettiBatches.length < 1) {\n        // No shapes to animate, so don't queue another frame\n        return;\n      }\n\n      this.requestAnimationFrameRequested = true; // Capture the last updated time for animation\n\n      this.lastUpdated = currentTime || new Date().getTime();\n      requestAnimationFrame(this.loop);\n    }\n  }, {\n    key: \"addConfetti\",\n    value: function addConfetti() {\n      var confettiConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _normalizeConfettiCon = normalizeConfettiConfig(confettiConfig),\n          confettiRadius = _normalizeConfettiCon.confettiRadius,\n          confettiNumber = _normalizeConfettiCon.confettiNumber,\n          confettiColors = _normalizeConfettiCon.confettiColors,\n          emojis = _normalizeConfettiCon.emojis,\n          emojiSize = _normalizeConfettiCon.emojiSize; // Use the bounding rect rather tahn the canvas width / height, because\n      // .width / .height are unset until a layout pass has been completed. Upon\n      // confetti being immediately queued on a page load, this hasn't happened so\n      // the default of 300x150 will be returned, causing an improper source point\n      // for the confetti animation.\n\n\n      var canvasRect = this.canvas.getBoundingClientRect();\n      var canvasWidth = canvasRect.width;\n      var canvasHeight = canvasRect.height;\n      var yPosition = canvasHeight * 5 / 7;\n      var leftConfettiPosition = {\n        x: 0,\n        y: yPosition\n      };\n      var rightConfettiPosition = {\n        x: canvasWidth,\n        y: yPosition\n      };\n      var confettiGroup = new ConfettiBatch(this.canvasContext);\n\n      for (var i = 0; i < confettiNumber / 2; i++) {\n        var confettiOnTheRight = new ConfettiShape({\n          initialPosition: leftConfettiPosition,\n          direction: 'right',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        var confettiOnTheLeft = new ConfettiShape({\n          initialPosition: rightConfettiPosition,\n          direction: 'left',\n          confettiRadius: confettiRadius,\n          confettiColors: confettiColors,\n          confettiNumber: confettiNumber,\n          emojis: emojis,\n          emojiSize: emojiSize,\n          canvasWidth: canvasWidth\n        });\n        confettiGroup.addShapes(confettiOnTheRight, confettiOnTheLeft);\n      }\n\n      this.activeConfettiBatches.push(confettiGroup);\n      this.queueAnimationFrameIfNeeded();\n      return confettiGroup.getBatchCompletePromise();\n    }\n  }, {\n    key: \"clearCanvas\",\n    value: function clearCanvas() {\n      this.activeConfettiBatches = [];\n    }\n  }]);\n\n  return JSConfetti;\n}();\n\nexport default JSConfetti;\n"],
  "mappings": "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",
  "names": ["ConfettiShape", "ConfettiBatch", "JSConfetti"]
}
